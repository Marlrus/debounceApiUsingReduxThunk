{"version":3,"sources":["App.module.css","redux/actions/movie.actions.js","App.js","reportWebVitals.js","redux/reducers/movie.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","movieActionTypes","fetchMovieByTitleAction","makeDebounce","title","dispatch","a","type","console","log","Axios","get","res","data","payload","err","connect","state","movieState","movieData","fetchMovieByTitle","props","fetching","Title","Actors","BoxOffice","Director","Genre","Poster","Plot","Year","Ratings","Error","useState","setTitle","useEffect","className","styles","inputContainer","onChange","e","target","value","resultContainer","poster","src","alt","plot","ratingsContainer","map","Source","Value","rating","projectDescription","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","error","movieReducer","message","rootReducer","combineReducers","middleware","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16b9c0d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"App_inputContainer__CPaLV\",\"title\":\"App_title__-GfWs\",\"poster\":\"App_poster__2gmdg\",\"resultContainer\":\"App_resultContainer__2HW2A\",\"plot\":\"App_plot__2Dhhe\",\"ratingsContainer\":\"App_ratingsContainer__38AlM\",\"rating\":\"App_rating__1oDLh\",\"projectDescription\":\"App_projectDescription__11TBC\"};","import Axios from \"axios\";\nimport makeDebounce from \"redux-debounce-thunk\";\n\nexport const movieActionTypes = {\n  MOVIE_FETCH_SUCCESS: \"MOVIE_FETCH_SUCCESS\",\n  MOVIE_FETCH_START: \"MOVIE_FETCH_START\",\n  MOVIE_FETCH_FAILURE: \"MOVIE_FETCH_FAILURE\",\n};\n\nexport const movieFetchSuccessAction = (data) => ({\n  type: movieActionTypes.MOVIE_FETCH_SUCCESS,\n  payload: data,\n});\n\nexport const movieFetchStartAction = () => ({\n  type: movieActionTypes.MOVIE_FETCH_START,\n});\n\nexport const movieFetchFailureAction = (err) => ({\n  type: movieActionTypes.MOVIE_FETCH_FAILURE,\n  payload: err,\n});\n\nconst fetchMovieByTitle = (title) => async (dispatch) => {\n  dispatch(movieFetchStartAction());\n  try {\n    console.log(title);\n    const res = await Axios.get(\n      `https://www.omdbapi.com/?i=tt3896198&apikey=70a503f8&t=${title}`\n    );\n    dispatch(movieFetchSuccessAction(res.data));\n  } catch (err) {\n    dispatch(movieFetchFailureAction(err));\n  }\n};\n\nexport const fetchMovieByTitleAction = makeDebounce(fetchMovieByTitle, 1000);\n","import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovieByTitleAction } from \"./redux/actions/movie.actions\";\n\nimport styles from \"./App.module.css\";\n\nconst App = (props) => {\n  const { movieState, fetchMovieByTitle } = props;\n  const { fetching, movieData } = movieState;\n\n  const {\n    Title,\n    Actors,\n    BoxOffice,\n    Director,\n    Genre,\n    Poster,\n    Plot,\n    Year,\n    Ratings,\n    Error,\n  } = movieData;\n\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    if (title === \"\") return;\n    fetchMovieByTitle(title);\n  }, [fetchMovieByTitle, title]);\n\n  const setMovie = (e) => setTitle(e.target.value);\n\n  return (\n    <>\n      <div className={styles.inputContainer}>\n        <strong>Title:</strong> <input onChange={setMovie} />\n      </div>\n      <div className={styles.resultContainer}>\n        {fetching && <h1>Loading...</h1>}\n        {!fetching && Title && (\n          <>\n            <h1 className={styles.title}>{Title}</h1>\n            <strong>\n              [{Year} {Genre}]\n            </strong>\n            <br />\n            <strong>Director:</strong> {Director}\n            <p>\n              <strong>Cast:</strong> {Actors}\n            </p>\n            <img\n              className={styles.poster}\n              src={Poster}\n              alt={`${Title} poster`}\n            />\n            <p className={styles.plot}>\n              <strong>Plot:</strong> {Plot}\n            </p>\n            <div className={styles.ratingsContainer}>\n              {Ratings.map(({ Source, Value }) => (\n                <div key={Source} className={styles.rating}>\n                  <strong>{Source}:</strong> {Value}\n                </div>\n              ))}\n            </div>\n            <p>\n              <strong>BoxOffice:</strong> {BoxOffice}\n            </p>\n          </>\n        )}\n        {!fetching && Error && <p>{Error}</p>}\n      </div>\n      <div className={styles.resultContainer}>\n        <h2>Redux Thunk Debounced API Call</h2>\n        <p className={styles.projectDescription}>\n          This spike uses the omdbapi to search for movies by title. There is no\n          search button implemented becuase the API makes the call once the\n          input is filled for a seamless user experience. To avoid excessive API\n          calls the API Call is debounced, meaning that the call is only made\n          once the input has settled for a set time. In this example, that delay\n          is 1s.\n        </p>\n        <br />\n        <p>\n          The stack used for prototyping is Create React App, Redux, and\n          Redux-Thunk (For async actions).\n        </p>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  movieState: state.movieData,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchMovieByTitle: (title) => dispatch(fetchMovieByTitleAction(title)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { movieActionTypes } from \"../actions/movie.actions\";\n\nconst INITIAL_STATE = {\n  fetching: false,\n  movieData: [],\n  error: null,\n};\n\nconst movieReducer = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case movieActionTypes.MOVIE_FETCH_SUCCESS:\n      return {\n        ...state,\n        fetching: false,\n        movieData: payload,\n      };\n    case movieActionTypes.MOVIE_FETCH_START:\n      return {\n        ...state,\n        fetching: true,\n      };\n    case movieActionTypes.MOVIE_FETCH_FAILURE:\n      return {\n        ...state,\n        fetching: false,\n        error: payload.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n","import { combineReducers } from \"redux\";\nimport movieReducer from \"./reducers/movie.reducer\";\n\nexport const rootReducer = combineReducers({\n  movieData: movieReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./root-reducer\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === \"development\") middleware.push(logger);\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}